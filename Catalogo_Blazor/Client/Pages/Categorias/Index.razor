@page "/categoria"
@inject HttpClient http

<h2>Categorias</h2>

@if (categorias == null)
{
    <p><em>Não existem categorias cadastradas...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Categoria</th>
                <th>Descrição</th>
                <th>Editar</th>
                <th>Deletar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Categoria categoria in categorias)
            {
                <tr>
                    <td>@categoria.Nome</td>
                    <td>@categoria.Descricao</td>
                    <td>
                        <a class="btn btn-primary" href="categoria/edit/@categoria.CategoriaId">Editar</a>
                    </td>
                    <td><a class="btn btn-danger" @onclick="@(()=> DeletaCategoria(categoria.CategoriaId))">Deletar</a></td>
                </tr>
            }

        </tbody>
    </table>
}

<Confirma @ref="confirma" onCancela="@CancelaConfirma" onConfirma="@DeletaConfirma">
    <div>Deseja realmente excluir este item?</div>
</Confirma>

<div>
    <a class="btn btn-success" href="categoria/create">Criar Categoria</a>
</div>

@code {
    Confirma confirma;
    int codigoCategoria;

    public Categoria[] categorias { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CarregaCategorias();
    }

    async Task CarregaCategorias()
    {
        categorias = await http.GetFromJsonAsync<Categoria[]>("api/categoria/todas");

    }

    void DeletaCategoria(int id)
    {
        confirma.Exibir();
        codigoCategoria = id;

    }

    async Task DeletaConfirma()
    {
        await http.DeleteAsync($"api/categoria/{codigoCategoria}");
        confirma.Ocultar();
        await CarregaCategorias();
    }

    void CancelaConfirma()
    {
        confirma.Ocultar();
    }

}
